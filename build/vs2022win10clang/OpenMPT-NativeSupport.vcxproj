<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|ARM">
      <Configuration>Debug</Configuration>
      <Platform>ARM</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|ARM64">
      <Configuration>Debug</Configuration>
      <Platform>ARM64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|ARM">
      <Configuration>Release</Configuration>
      <Platform>ARM</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|ARM64">
      <Configuration>Release</Configuration>
      <Platform>ARM64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Checked|Win32">
      <Configuration>Checked</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Checked|x64">
      <Configuration>Checked</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Checked|ARM">
      <Configuration>Checked</Configuration>
      <Platform>ARM</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Checked|ARM64">
      <Configuration>Checked</Configuration>
      <Platform>ARM64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="DebugShared|Win32">
      <Configuration>DebugShared</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="DebugShared|x64">
      <Configuration>DebugShared</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="DebugShared|ARM">
      <Configuration>DebugShared</Configuration>
      <Platform>ARM</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="DebugShared|ARM64">
      <Configuration>DebugShared</Configuration>
      <Platform>ARM64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="ReleaseShared|Win32">
      <Configuration>ReleaseShared</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="ReleaseShared|x64">
      <Configuration>ReleaseShared</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="ReleaseShared|ARM">
      <Configuration>ReleaseShared</Configuration>
      <Platform>ARM</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="ReleaseShared|ARM64">
      <Configuration>ReleaseShared</Configuration>
      <Platform>ARM64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="CheckedShared|Win32">
      <Configuration>CheckedShared</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="CheckedShared|x64">
      <Configuration>CheckedShared</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="CheckedShared|ARM">
      <Configuration>CheckedShared</Configuration>
      <Platform>ARM</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="CheckedShared|ARM64">
      <Configuration>CheckedShared</Configuration>
      <Platform>ARM64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{563A631D-FE07-47BC-A98F-9FE5B3EBABFA}</ProjectGuid>
    <IgnoreWarnCompileDuplicatedFilename>true</IgnoreWarnCompileDuplicatedFilename>
    <Keyword>Win32Proj</Keyword>
    <RootNamespace>OpenMPT-NativeSupport</RootNamespace>
    <PreferredToolArchitecture>x64</PreferredToolArchitecture>
    <WindowsTargetPlatformVersion>10.0.22621.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>ClangCL</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>ClangCL</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|ARM'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>ClangCL</PlatformToolset>
    <WindowsSDKDesktopARMSupport>true</WindowsSDKDesktopARMSupport>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|ARM64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>ClangCL</PlatformToolset>
    <WindowsSDKDesktopARM64Support>true</WindowsSDKDesktopARM64Support>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>ClangCL</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>ClangCL</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|ARM'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>ClangCL</PlatformToolset>
    <WindowsSDKDesktopARMSupport>true</WindowsSDKDesktopARMSupport>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|ARM64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>ClangCL</PlatformToolset>
    <WindowsSDKDesktopARM64Support>true</WindowsSDKDesktopARM64Support>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Checked|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>ClangCL</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Checked|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>ClangCL</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Checked|ARM'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>ClangCL</PlatformToolset>
    <WindowsSDKDesktopARMSupport>true</WindowsSDKDesktopARMSupport>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Checked|ARM64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>ClangCL</PlatformToolset>
    <WindowsSDKDesktopARM64Support>true</WindowsSDKDesktopARM64Support>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DebugShared|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>ClangCL</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DebugShared|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>ClangCL</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DebugShared|ARM'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>ClangCL</PlatformToolset>
    <WindowsSDKDesktopARMSupport>true</WindowsSDKDesktopARMSupport>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DebugShared|ARM64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>ClangCL</PlatformToolset>
    <WindowsSDKDesktopARM64Support>true</WindowsSDKDesktopARM64Support>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseShared|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>ClangCL</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseShared|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>ClangCL</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseShared|ARM'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>ClangCL</PlatformToolset>
    <WindowsSDKDesktopARMSupport>true</WindowsSDKDesktopARMSupport>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseShared|ARM64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>ClangCL</PlatformToolset>
    <WindowsSDKDesktopARM64Support>true</WindowsSDKDesktopARM64Support>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='CheckedShared|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>ClangCL</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='CheckedShared|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>ClangCL</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='CheckedShared|ARM'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>ClangCL</PlatformToolset>
    <WindowsSDKDesktopARMSupport>true</WindowsSDKDesktopARMSupport>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='CheckedShared|ARM64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>ClangCL</PlatformToolset>
    <WindowsSDKDesktopARM64Support>true</WindowsSDKDesktopARM64Support>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|ARM'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|ARM64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|ARM'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|ARM64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Checked|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Checked|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Checked|ARM'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Checked|ARM64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='DebugShared|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='DebugShared|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='DebugShared|ARM'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='DebugShared|ARM64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='ReleaseShared|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='ReleaseShared|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='ReleaseShared|ARM'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='ReleaseShared|ARM64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='CheckedShared|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='CheckedShared|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='CheckedShared|ARM'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='CheckedShared|ARM64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <LinkIncremental>true</LinkIncremental>
    <OutDir>..\..\bin\debug\vs2022-win10clang-static\x86\</OutDir>
    <IntDir>..\obj\vs2022win10clang\OpenMPT-NativeSupport\x86\Debug\</IntDir>
    <TargetName>OpenMPT-NativeSupport</TargetName>
    <TargetExt>.dll</TargetExt>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <LinkIncremental>true</LinkIncremental>
    <OutDir>..\..\bin\debug\vs2022-win10clang-static\amd64\</OutDir>
    <IntDir>..\obj\vs2022win10clang\OpenMPT-NativeSupport\x86_64\Debug\</IntDir>
    <TargetName>OpenMPT-NativeSupport</TargetName>
    <TargetExt>.dll</TargetExt>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|ARM'">
    <LinkIncremental>true</LinkIncremental>
    <OutDir>..\..\bin\debug\vs2022-win10clang-static\arm\</OutDir>
    <IntDir>..\obj\vs2022win10clang\OpenMPT-NativeSupport\arm\Debug\</IntDir>
    <TargetName>OpenMPT-NativeSupport</TargetName>
    <TargetExt>.dll</TargetExt>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|ARM64'">
    <LinkIncremental>true</LinkIncremental>
    <OutDir>..\..\bin\debug\vs2022-win10clang-static\arm64\</OutDir>
    <IntDir>..\obj\vs2022win10clang\OpenMPT-NativeSupport\arm64\Debug\</IntDir>
    <TargetName>OpenMPT-NativeSupport</TargetName>
    <TargetExt>.dll</TargetExt>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <LinkIncremental>false</LinkIncremental>
    <OutDir>..\..\bin\release\vs2022-win10clang-static\x86\</OutDir>
    <IntDir>..\obj\vs2022win10clang\OpenMPT-NativeSupport\x86\Release\</IntDir>
    <TargetName>OpenMPT-NativeSupport</TargetName>
    <TargetExt>.dll</TargetExt>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <LinkIncremental>false</LinkIncremental>
    <OutDir>..\..\bin\release\vs2022-win10clang-static\amd64\</OutDir>
    <IntDir>..\obj\vs2022win10clang\OpenMPT-NativeSupport\x86_64\Release\</IntDir>
    <TargetName>OpenMPT-NativeSupport</TargetName>
    <TargetExt>.dll</TargetExt>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|ARM'">
    <LinkIncremental>false</LinkIncremental>
    <OutDir>..\..\bin\release\vs2022-win10clang-static\arm\</OutDir>
    <IntDir>..\obj\vs2022win10clang\OpenMPT-NativeSupport\arm\Release\</IntDir>
    <TargetName>OpenMPT-NativeSupport</TargetName>
    <TargetExt>.dll</TargetExt>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|ARM64'">
    <LinkIncremental>false</LinkIncremental>
    <OutDir>..\..\bin\release\vs2022-win10clang-static\arm64\</OutDir>
    <IntDir>..\obj\vs2022win10clang\OpenMPT-NativeSupport\arm64\Release\</IntDir>
    <TargetName>OpenMPT-NativeSupport</TargetName>
    <TargetExt>.dll</TargetExt>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Checked|Win32'">
    <LinkIncremental>false</LinkIncremental>
    <OutDir>..\..\bin\checked\vs2022-win10clang-static\x86\</OutDir>
    <IntDir>..\obj\vs2022win10clang\OpenMPT-NativeSupport\x86\Checked\</IntDir>
    <TargetName>OpenMPT-NativeSupport</TargetName>
    <TargetExt>.dll</TargetExt>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Checked|x64'">
    <LinkIncremental>false</LinkIncremental>
    <OutDir>..\..\bin\checked\vs2022-win10clang-static\amd64\</OutDir>
    <IntDir>..\obj\vs2022win10clang\OpenMPT-NativeSupport\x86_64\Checked\</IntDir>
    <TargetName>OpenMPT-NativeSupport</TargetName>
    <TargetExt>.dll</TargetExt>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Checked|ARM'">
    <LinkIncremental>false</LinkIncremental>
    <OutDir>..\..\bin\checked\vs2022-win10clang-static\arm\</OutDir>
    <IntDir>..\obj\vs2022win10clang\OpenMPT-NativeSupport\arm\Checked\</IntDir>
    <TargetName>OpenMPT-NativeSupport</TargetName>
    <TargetExt>.dll</TargetExt>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Checked|ARM64'">
    <LinkIncremental>false</LinkIncremental>
    <OutDir>..\..\bin\checked\vs2022-win10clang-static\arm64\</OutDir>
    <IntDir>..\obj\vs2022win10clang\OpenMPT-NativeSupport\arm64\Checked\</IntDir>
    <TargetName>OpenMPT-NativeSupport</TargetName>
    <TargetExt>.dll</TargetExt>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DebugShared|Win32'">
    <LinkIncremental>true</LinkIncremental>
    <OutDir>..\..\bin\debug\vs2022-win10clang-shared\x86\</OutDir>
    <IntDir>..\obj\vs2022win10clang\OpenMPT-NativeSupport\x86\DebugShared\</IntDir>
    <TargetName>OpenMPT-NativeSupport</TargetName>
    <TargetExt>.dll</TargetExt>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DebugShared|x64'">
    <LinkIncremental>true</LinkIncremental>
    <OutDir>..\..\bin\debug\vs2022-win10clang-shared\amd64\</OutDir>
    <IntDir>..\obj\vs2022win10clang\OpenMPT-NativeSupport\x86_64\DebugShared\</IntDir>
    <TargetName>OpenMPT-NativeSupport</TargetName>
    <TargetExt>.dll</TargetExt>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DebugShared|ARM'">
    <LinkIncremental>true</LinkIncremental>
    <OutDir>..\..\bin\debug\vs2022-win10clang-shared\arm\</OutDir>
    <IntDir>..\obj\vs2022win10clang\OpenMPT-NativeSupport\arm\DebugShared\</IntDir>
    <TargetName>OpenMPT-NativeSupport</TargetName>
    <TargetExt>.dll</TargetExt>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DebugShared|ARM64'">
    <LinkIncremental>true</LinkIncremental>
    <OutDir>..\..\bin\debug\vs2022-win10clang-shared\arm64\</OutDir>
    <IntDir>..\obj\vs2022win10clang\OpenMPT-NativeSupport\arm64\DebugShared\</IntDir>
    <TargetName>OpenMPT-NativeSupport</TargetName>
    <TargetExt>.dll</TargetExt>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseShared|Win32'">
    <LinkIncremental>false</LinkIncremental>
    <OutDir>..\..\bin\release\vs2022-win10clang-shared\x86\</OutDir>
    <IntDir>..\obj\vs2022win10clang\OpenMPT-NativeSupport\x86\ReleaseShared\</IntDir>
    <TargetName>OpenMPT-NativeSupport</TargetName>
    <TargetExt>.dll</TargetExt>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseShared|x64'">
    <LinkIncremental>false</LinkIncremental>
    <OutDir>..\..\bin\release\vs2022-win10clang-shared\amd64\</OutDir>
    <IntDir>..\obj\vs2022win10clang\OpenMPT-NativeSupport\x86_64\ReleaseShared\</IntDir>
    <TargetName>OpenMPT-NativeSupport</TargetName>
    <TargetExt>.dll</TargetExt>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseShared|ARM'">
    <LinkIncremental>false</LinkIncremental>
    <OutDir>..\..\bin\release\vs2022-win10clang-shared\arm\</OutDir>
    <IntDir>..\obj\vs2022win10clang\OpenMPT-NativeSupport\arm\ReleaseShared\</IntDir>
    <TargetName>OpenMPT-NativeSupport</TargetName>
    <TargetExt>.dll</TargetExt>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseShared|ARM64'">
    <LinkIncremental>false</LinkIncremental>
    <OutDir>..\..\bin\release\vs2022-win10clang-shared\arm64\</OutDir>
    <IntDir>..\obj\vs2022win10clang\OpenMPT-NativeSupport\arm64\ReleaseShared\</IntDir>
    <TargetName>OpenMPT-NativeSupport</TargetName>
    <TargetExt>.dll</TargetExt>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='CheckedShared|Win32'">
    <LinkIncremental>false</LinkIncremental>
    <OutDir>..\..\bin\checked\vs2022-win10clang-shared\x86\</OutDir>
    <IntDir>..\obj\vs2022win10clang\OpenMPT-NativeSupport\x86\CheckedShared\</IntDir>
    <TargetName>OpenMPT-NativeSupport</TargetName>
    <TargetExt>.dll</TargetExt>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='CheckedShared|x64'">
    <LinkIncremental>false</LinkIncremental>
    <OutDir>..\..\bin\checked\vs2022-win10clang-shared\amd64\</OutDir>
    <IntDir>..\obj\vs2022win10clang\OpenMPT-NativeSupport\x86_64\CheckedShared\</IntDir>
    <TargetName>OpenMPT-NativeSupport</TargetName>
    <TargetExt>.dll</TargetExt>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='CheckedShared|ARM'">
    <LinkIncremental>false</LinkIncremental>
    <OutDir>..\..\bin\checked\vs2022-win10clang-shared\arm\</OutDir>
    <IntDir>..\obj\vs2022win10clang\OpenMPT-NativeSupport\arm\CheckedShared\</IntDir>
    <TargetName>OpenMPT-NativeSupport</TargetName>
    <TargetExt>.dll</TargetExt>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='CheckedShared|ARM64'">
    <LinkIncremental>false</LinkIncremental>
    <OutDir>..\..\bin\checked\vs2022-win10clang-shared\arm64\</OutDir>
    <IntDir>..\obj\vs2022win10clang\OpenMPT-NativeSupport\arm64\CheckedShared\</IntDir>
    <TargetName>OpenMPT-NativeSupport</TargetName>
    <TargetExt>.dll</TargetExt>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <WarningLevel>Level4</WarningLevel>
      <PreprocessorDefinitions>DEBUG;MPT_BUILD_DEBUG;MPT_BUILD_MSVC;WIN32;NOMINMAX;_CRT_NONSTDC_NO_WARNINGS;_CRT_SECURE_NO_WARNINGS;_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES=1;_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES_COUNT=1;_WIN32_WINNT=0x0A00;NTDDI_VERSION=0x0A000009;MPT_WITH_NLOHMANNJSON;MPT_WITH_PORTAUDIO;MPT_WITH_RTAUDIO;MODPLUG_TRACKER;MPT_BUILD_WINESUPPORT;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>..\..\include\nlohmann-json\include;..\..\include\portaudio\include;..\..\include\rtaudio;..\..\src;..\..\common;$(IntDir)\svn_version;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <DebugInformationFormat>None</DebugInformationFormat>
      <Optimization>Disabled</Optimization>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <LanguageStandard_C>stdc17</LanguageStandard_C>
      <ConformanceMode>true</ConformanceMode>
      <ExternalWarningLevel>Level3</ExternalWarningLevel>
      <UseStandardPreprocessor>true</UseStandardPreprocessor>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <ImportLibrary>..\..\bin\debug\vs2022-win10clang-static\x86\OpenMPT-NativeSupport.lib</ImportLibrary>
      <LargeAddressAware>true</LargeAddressAware>
    </Link>
    <PreBuildEvent>
      <Command>..\..\build\svn_version\update_svn_version_vs_premake.cmd $(IntDir)</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <WarningLevel>Level4</WarningLevel>
      <PreprocessorDefinitions>DEBUG;MPT_BUILD_DEBUG;MPT_BUILD_MSVC;WIN32;NOMINMAX;_CRT_NONSTDC_NO_WARNINGS;_CRT_SECURE_NO_WARNINGS;_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES=1;_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES_COUNT=1;_WIN32_WINNT=0x0A00;NTDDI_VERSION=0x0A000009;MPT_WITH_NLOHMANNJSON;MPT_WITH_PORTAUDIO;MPT_WITH_RTAUDIO;MODPLUG_TRACKER;MPT_BUILD_WINESUPPORT;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>..\..\include\nlohmann-json\include;..\..\include\portaudio\include;..\..\include\rtaudio;..\..\src;..\..\common;$(IntDir)\svn_version;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <DebugInformationFormat>None</DebugInformationFormat>
      <Optimization>Disabled</Optimization>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <LanguageStandard_C>stdc17</LanguageStandard_C>
      <ConformanceMode>true</ConformanceMode>
      <ExternalWarningLevel>Level3</ExternalWarningLevel>
      <UseStandardPreprocessor>true</UseStandardPreprocessor>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <ImportLibrary>..\..\bin\debug\vs2022-win10clang-static\amd64\OpenMPT-NativeSupport.lib</ImportLibrary>
      <LargeAddressAware>true</LargeAddressAware>
    </Link>
    <PreBuildEvent>
      <Command>..\..\build\svn_version\update_svn_version_vs_premake.cmd $(IntDir)</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|ARM'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <WarningLevel>Level4</WarningLevel>
      <PreprocessorDefinitions>DEBUG;MPT_BUILD_DEBUG;MPT_BUILD_MSVC;WIN32;NOMINMAX;_CRT_NONSTDC_NO_WARNINGS;_CRT_SECURE_NO_WARNINGS;_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES=1;_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES_COUNT=1;_WIN32_WINNT=0x0A00;NTDDI_VERSION=0x0A000009;MPT_WITH_NLOHMANNJSON;MPT_WITH_PORTAUDIO;MPT_WITH_RTAUDIO;MODPLUG_TRACKER;MPT_BUILD_WINESUPPORT;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>..\..\include\nlohmann-json\include;..\..\include\portaudio\include;..\..\include\rtaudio;..\..\src;..\..\common;$(IntDir)\svn_version;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <DebugInformationFormat>None</DebugInformationFormat>
      <Optimization>Disabled</Optimization>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <LanguageStandard_C>stdc17</LanguageStandard_C>
      <ConformanceMode>true</ConformanceMode>
      <ExternalWarningLevel>Level3</ExternalWarningLevel>
      <UseStandardPreprocessor>true</UseStandardPreprocessor>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <ImportLibrary>..\..\bin\debug\vs2022-win10clang-static\arm\OpenMPT-NativeSupport.lib</ImportLibrary>
      <LargeAddressAware>true</LargeAddressAware>
    </Link>
    <PreBuildEvent>
      <Command>..\..\build\svn_version\update_svn_version_vs_premake.cmd $(IntDir)</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|ARM64'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <WarningLevel>Level4</WarningLevel>
      <PreprocessorDefinitions>DEBUG;MPT_BUILD_DEBUG;MPT_BUILD_MSVC;WIN32;NOMINMAX;_CRT_NONSTDC_NO_WARNINGS;_CRT_SECURE_NO_WARNINGS;_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES=1;_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES_COUNT=1;_WIN32_WINNT=0x0A00;NTDDI_VERSION=0x0A000009;MPT_WITH_NLOHMANNJSON;MPT_WITH_PORTAUDIO;MPT_WITH_RTAUDIO;MODPLUG_TRACKER;MPT_BUILD_WINESUPPORT;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>..\..\include\nlohmann-json\include;..\..\include\portaudio\include;..\..\include\rtaudio;..\..\src;..\..\common;$(IntDir)\svn_version;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <DebugInformationFormat>None</DebugInformationFormat>
      <Optimization>Disabled</Optimization>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <LanguageStandard_C>stdc17</LanguageStandard_C>
      <ConformanceMode>true</ConformanceMode>
      <ExternalWarningLevel>Level3</ExternalWarningLevel>
      <UseStandardPreprocessor>true</UseStandardPreprocessor>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <ImportLibrary>..\..\bin\debug\vs2022-win10clang-static\arm64\OpenMPT-NativeSupport.lib</ImportLibrary>
      <LargeAddressAware>true</LargeAddressAware>
    </Link>
    <PreBuildEvent>
      <Command>..\..\build\svn_version\update_svn_version_vs_premake.cmd $(IntDir)</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <WarningLevel>Level4</WarningLevel>
      <PreprocessorDefinitions>NDEBUG;MPT_BUILD_MSVC;WIN32;NOMINMAX;_CRT_NONSTDC_NO_WARNINGS;_CRT_SECURE_NO_WARNINGS;_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES=1;_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES_COUNT=1;_WIN32_WINNT=0x0A00;NTDDI_VERSION=0x0A000009;MPT_WITH_NLOHMANNJSON;MPT_WITH_PORTAUDIO;MPT_WITH_RTAUDIO;MODPLUG_TRACKER;MPT_BUILD_WINESUPPORT;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>..\..\include\nlohmann-json\include;..\..\include\portaudio\include;..\..\include\rtaudio;..\..\src;..\..\common;$(IntDir)\svn_version;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <DebugInformationFormat>None</DebugInformationFormat>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <MinimalRebuild>false</MinimalRebuild>
      <StringPooling>true</StringPooling>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <EnableEnhancedInstructionSet>StreamingSIMDExtensions2</EnableEnhancedInstructionSet>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <LanguageStandard_C>stdc17</LanguageStandard_C>
      <ConformanceMode>true</ConformanceMode>
      <ExternalWarningLevel>Level3</ExternalWarningLevel>
      <UseStandardPreprocessor>true</UseStandardPreprocessor>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <ImportLibrary>..\..\bin\release\vs2022-win10clang-static\x86\OpenMPT-NativeSupport.lib</ImportLibrary>
      <LargeAddressAware>true</LargeAddressAware>
    </Link>
    <PreBuildEvent>
      <Command>..\..\build\svn_version\update_svn_version_vs_premake.cmd $(IntDir)</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <WarningLevel>Level4</WarningLevel>
      <PreprocessorDefinitions>NDEBUG;MPT_BUILD_MSVC;WIN32;NOMINMAX;_CRT_NONSTDC_NO_WARNINGS;_CRT_SECURE_NO_WARNINGS;_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES=1;_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES_COUNT=1;_WIN32_WINNT=0x0A00;NTDDI_VERSION=0x0A000009;MPT_WITH_NLOHMANNJSON;MPT_WITH_PORTAUDIO;MPT_WITH_RTAUDIO;MODPLUG_TRACKER;MPT_BUILD_WINESUPPORT;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>..\..\include\nlohmann-json\include;..\..\include\portaudio\include;..\..\include\rtaudio;..\..\src;..\..\common;$(IntDir)\svn_version;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <DebugInformationFormat>None</DebugInformationFormat>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <MinimalRebuild>false</MinimalRebuild>
      <StringPooling>true</StringPooling>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <LanguageStandard_C>stdc17</LanguageStandard_C>
      <ConformanceMode>true</ConformanceMode>
      <ExternalWarningLevel>Level3</ExternalWarningLevel>
      <UseStandardPreprocessor>true</UseStandardPreprocessor>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <ImportLibrary>..\..\bin\release\vs2022-win10clang-static\amd64\OpenMPT-NativeSupport.lib</ImportLibrary>
      <LargeAddressAware>true</LargeAddressAware>
    </Link>
    <PreBuildEvent>
      <Command>..\..\build\svn_version\update_svn_version_vs_premake.cmd $(IntDir)</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|ARM'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <WarningLevel>Level4</WarningLevel>
      <PreprocessorDefinitions>NDEBUG;MPT_BUILD_MSVC;WIN32;NOMINMAX;_CRT_NONSTDC_NO_WARNINGS;_CRT_SECURE_NO_WARNINGS;_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES=1;_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES_COUNT=1;_WIN32_WINNT=0x0A00;NTDDI_VERSION=0x0A000009;MPT_WITH_NLOHMANNJSON;MPT_WITH_PORTAUDIO;MPT_WITH_RTAUDIO;MODPLUG_TRACKER;MPT_BUILD_WINESUPPORT;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>..\..\include\nlohmann-json\include;..\..\include\portaudio\include;..\..\include\rtaudio;..\..\src;..\..\common;$(IntDir)\svn_version;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <DebugInformationFormat>None</DebugInformationFormat>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <MinimalRebuild>false</MinimalRebuild>
      <StringPooling>true</StringPooling>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <LanguageStandard_C>stdc17</LanguageStandard_C>
      <ConformanceMode>true</ConformanceMode>
      <ExternalWarningLevel>Level3</ExternalWarningLevel>
      <UseStandardPreprocessor>true</UseStandardPreprocessor>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <ImportLibrary>..\..\bin\release\vs2022-win10clang-static\arm\OpenMPT-NativeSupport.lib</ImportLibrary>
      <LargeAddressAware>true</LargeAddressAware>
    </Link>
    <PreBuildEvent>
      <Command>..\..\build\svn_version\update_svn_version_vs_premake.cmd $(IntDir)</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|ARM64'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <WarningLevel>Level4</WarningLevel>
      <PreprocessorDefinitions>NDEBUG;MPT_BUILD_MSVC;WIN32;NOMINMAX;_CRT_NONSTDC_NO_WARNINGS;_CRT_SECURE_NO_WARNINGS;_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES=1;_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES_COUNT=1;_WIN32_WINNT=0x0A00;NTDDI_VERSION=0x0A000009;MPT_WITH_NLOHMANNJSON;MPT_WITH_PORTAUDIO;MPT_WITH_RTAUDIO;MODPLUG_TRACKER;MPT_BUILD_WINESUPPORT;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>..\..\include\nlohmann-json\include;..\..\include\portaudio\include;..\..\include\rtaudio;..\..\src;..\..\common;$(IntDir)\svn_version;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <DebugInformationFormat>None</DebugInformationFormat>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <MinimalRebuild>false</MinimalRebuild>
      <StringPooling>true</StringPooling>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <LanguageStandard_C>stdc17</LanguageStandard_C>
      <ConformanceMode>true</ConformanceMode>
      <ExternalWarningLevel>Level3</ExternalWarningLevel>
      <UseStandardPreprocessor>true</UseStandardPreprocessor>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <ImportLibrary>..\..\bin\release\vs2022-win10clang-static\arm64\OpenMPT-NativeSupport.lib</ImportLibrary>
      <LargeAddressAware>true</LargeAddressAware>
    </Link>
    <PreBuildEvent>
      <Command>..\..\build\svn_version\update_svn_version_vs_premake.cmd $(IntDir)</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Checked|Win32'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <WarningLevel>Level4</WarningLevel>
      <PreprocessorDefinitions>DEBUG;MPT_BUILD_CHECKED;MPT_BUILD_MSVC;WIN32;NOMINMAX;_CRT_NONSTDC_NO_WARNINGS;_CRT_SECURE_NO_WARNINGS;_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES=1;_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES_COUNT=1;_WIN32_WINNT=0x0A00;NTDDI_VERSION=0x0A000009;MPT_WITH_NLOHMANNJSON;MPT_WITH_PORTAUDIO;MPT_WITH_RTAUDIO;MODPLUG_TRACKER;MPT_BUILD_WINESUPPORT;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>..\..\include\nlohmann-json\include;..\..\include\portaudio\include;..\..\include\rtaudio;..\..\src;..\..\common;$(IntDir)\svn_version;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <DebugInformationFormat>None</DebugInformationFormat>
      <Optimization>Full</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <MinimalRebuild>false</MinimalRebuild>
      <OmitFramePointers>false</OmitFramePointers>
      <StringPooling>true</StringPooling>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <EnableEnhancedInstructionSet>StreamingSIMDExtensions2</EnableEnhancedInstructionSet>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <LanguageStandard_C>stdc17</LanguageStandard_C>
      <ConformanceMode>true</ConformanceMode>
      <ExternalWarningLevel>Level3</ExternalWarningLevel>
      <UseStandardPreprocessor>true</UseStandardPreprocessor>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <ImportLibrary>..\..\bin\checked\vs2022-win10clang-static\x86\OpenMPT-NativeSupport.lib</ImportLibrary>
      <LargeAddressAware>true</LargeAddressAware>
    </Link>
    <PreBuildEvent>
      <Command>..\..\build\svn_version\update_svn_version_vs_premake.cmd $(IntDir)</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Checked|x64'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <WarningLevel>Level4</WarningLevel>
      <PreprocessorDefinitions>DEBUG;MPT_BUILD_CHECKED;MPT_BUILD_MSVC;WIN32;NOMINMAX;_CRT_NONSTDC_NO_WARNINGS;_CRT_SECURE_NO_WARNINGS;_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES=1;_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES_COUNT=1;_WIN32_WINNT=0x0A00;NTDDI_VERSION=0x0A000009;MPT_WITH_NLOHMANNJSON;MPT_WITH_PORTAUDIO;MPT_WITH_RTAUDIO;MODPLUG_TRACKER;MPT_BUILD_WINESUPPORT;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>..\..\include\nlohmann-json\include;..\..\include\portaudio\include;..\..\include\rtaudio;..\..\src;..\..\common;$(IntDir)\svn_version;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <DebugInformationFormat>None</DebugInformationFormat>
      <Optimization>Full</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <MinimalRebuild>false</MinimalRebuild>
      <OmitFramePointers>false</OmitFramePointers>
      <StringPooling>true</StringPooling>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <LanguageStandard_C>stdc17</LanguageStandard_C>
      <ConformanceMode>true</ConformanceMode>
      <ExternalWarningLevel>Level3</ExternalWarningLevel>
      <UseStandardPreprocessor>true</UseStandardPreprocessor>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <ImportLibrary>..\..\bin\checked\vs2022-win10clang-static\amd64\OpenMPT-NativeSupport.lib</ImportLibrary>
      <LargeAddressAware>true</LargeAddressAware>
    </Link>
    <PreBuildEvent>
      <Command>..\..\build\svn_version\update_svn_version_vs_premake.cmd $(IntDir)</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Checked|ARM'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <WarningLevel>Level4</WarningLevel>
      <PreprocessorDefinitions>DEBUG;MPT_BUILD_CHECKED;MPT_BUILD_MSVC;WIN32;NOMINMAX;_CRT_NONSTDC_NO_WARNINGS;_CRT_SECURE_NO_WARNINGS;_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES=1;_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES_COUNT=1;_WIN32_WINNT=0x0A00;NTDDI_VERSION=0x0A000009;MPT_WITH_NLOHMANNJSON;MPT_WITH_PORTAUDIO;MPT_WITH_RTAUDIO;MODPLUG_TRACKER;MPT_BUILD_WINESUPPORT;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>..\..\include\nlohmann-json\include;..\..\include\portaudio\include;..\..\include\rtaudio;..\..\src;..\..\common;$(IntDir)\svn_version;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <DebugInformationFormat>None</DebugInformationFormat>
      <Optimization>Full</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <MinimalRebuild>false</MinimalRebuild>
      <OmitFramePointers>false</OmitFramePointers>
      <StringPooling>true</StringPooling>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <LanguageStandard_C>stdc17</LanguageStandard_C>
      <ConformanceMode>true</ConformanceMode>
      <ExternalWarningLevel>Level3</ExternalWarningLevel>
      <UseStandardPreprocessor>true</UseStandardPreprocessor>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <ImportLibrary>..\..\bin\checked\vs2022-win10clang-static\arm\OpenMPT-NativeSupport.lib</ImportLibrary>
      <LargeAddressAware>true</LargeAddressAware>
    </Link>
    <PreBuildEvent>
      <Command>..\..\build\svn_version\update_svn_version_vs_premake.cmd $(IntDir)</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Checked|ARM64'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <WarningLevel>Level4</WarningLevel>
      <PreprocessorDefinitions>DEBUG;MPT_BUILD_CHECKED;MPT_BUILD_MSVC;WIN32;NOMINMAX;_CRT_NONSTDC_NO_WARNINGS;_CRT_SECURE_NO_WARNINGS;_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES=1;_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES_COUNT=1;_WIN32_WINNT=0x0A00;NTDDI_VERSION=0x0A000009;MPT_WITH_NLOHMANNJSON;MPT_WITH_PORTAUDIO;MPT_WITH_RTAUDIO;MODPLUG_TRACKER;MPT_BUILD_WINESUPPORT;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>..\..\include\nlohmann-json\include;..\..\include\portaudio\include;..\..\include\rtaudio;..\..\src;..\..\common;$(IntDir)\svn_version;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <DebugInformationFormat>None</DebugInformationFormat>
      <Optimization>Full</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <MinimalRebuild>false</MinimalRebuild>
      <OmitFramePointers>false</OmitFramePointers>
      <StringPooling>true</StringPooling>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <LanguageStandard_C>stdc17</LanguageStandard_C>
      <ConformanceMode>true</ConformanceMode>
      <ExternalWarningLevel>Level3</ExternalWarningLevel>
      <UseStandardPreprocessor>true</UseStandardPreprocessor>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <ImportLibrary>..\..\bin\checked\vs2022-win10clang-static\arm64\OpenMPT-NativeSupport.lib</ImportLibrary>
      <LargeAddressAware>true</LargeAddressAware>
    </Link>
    <PreBuildEvent>
      <Command>..\..\build\svn_version\update_svn_version_vs_premake.cmd $(IntDir)</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='DebugShared|Win32'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <WarningLevel>Level4</WarningLevel>
      <PreprocessorDefinitions>DEBUG;MPT_BUILD_DEBUG;MPT_BUILD_MSVC;WIN32;NOMINMAX;_CRT_NONSTDC_NO_WARNINGS;_CRT_SECURE_NO_WARNINGS;_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES=1;_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES_COUNT=1;_WIN32_WINNT=0x0A00;NTDDI_VERSION=0x0A000009;MPT_WITH_NLOHMANNJSON;MPT_WITH_PORTAUDIO;MPT_WITH_RTAUDIO;MODPLUG_TRACKER;MPT_BUILD_WINESUPPORT;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>..\..\include\nlohmann-json\include;..\..\include\portaudio\include;..\..\include\rtaudio;..\..\src;..\..\common;$(IntDir)\svn_version;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <DebugInformationFormat>None</DebugInformationFormat>
      <Optimization>Disabled</Optimization>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <LanguageStandard_C>stdc17</LanguageStandard_C>
      <ConformanceMode>true</ConformanceMode>
      <ExternalWarningLevel>Level3</ExternalWarningLevel>
      <UseStandardPreprocessor>true</UseStandardPreprocessor>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <ImportLibrary>..\..\bin\debug\vs2022-win10clang-shared\x86\OpenMPT-NativeSupport.lib</ImportLibrary>
      <LargeAddressAware>true</LargeAddressAware>
    </Link>
    <PreBuildEvent>
      <Command>..\..\build\svn_version\update_svn_version_vs_premake.cmd $(IntDir)</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='DebugShared|x64'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <WarningLevel>Level4</WarningLevel>
      <PreprocessorDefinitions>DEBUG;MPT_BUILD_DEBUG;MPT_BUILD_MSVC;WIN32;NOMINMAX;_CRT_NONSTDC_NO_WARNINGS;_CRT_SECURE_NO_WARNINGS;_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES=1;_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES_COUNT=1;_WIN32_WINNT=0x0A00;NTDDI_VERSION=0x0A000009;MPT_WITH_NLOHMANNJSON;MPT_WITH_PORTAUDIO;MPT_WITH_RTAUDIO;MODPLUG_TRACKER;MPT_BUILD_WINESUPPORT;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>..\..\include\nlohmann-json\include;..\..\include\portaudio\include;..\..\include\rtaudio;..\..\src;..\..\common;$(IntDir)\svn_version;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <DebugInformationFormat>None</DebugInformationFormat>
      <Optimization>Disabled</Optimization>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <LanguageStandard_C>stdc17</LanguageStandard_C>
      <ConformanceMode>true</ConformanceMode>
      <ExternalWarningLevel>Level3</ExternalWarningLevel>
      <UseStandardPreprocessor>true</UseStandardPreprocessor>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <ImportLibrary>..\..\bin\debug\vs2022-win10clang-shared\amd64\OpenMPT-NativeSupport.lib</ImportLibrary>
      <LargeAddressAware>true</LargeAddressAware>
    </Link>
    <PreBuildEvent>
      <Command>..\..\build\svn_version\update_svn_version_vs_premake.cmd $(IntDir)</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='DebugShared|ARM'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <WarningLevel>Level4</WarningLevel>
      <PreprocessorDefinitions>DEBUG;MPT_BUILD_DEBUG;MPT_BUILD_MSVC;WIN32;NOMINMAX;_CRT_NONSTDC_NO_WARNINGS;_CRT_SECURE_NO_WARNINGS;_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES=1;_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES_COUNT=1;_WIN32_WINNT=0x0A00;NTDDI_VERSION=0x0A000009;MPT_WITH_NLOHMANNJSON;MPT_WITH_PORTAUDIO;MPT_WITH_RTAUDIO;MODPLUG_TRACKER;MPT_BUILD_WINESUPPORT;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>..\..\include\nlohmann-json\include;..\..\include\portaudio\include;..\..\include\rtaudio;..\..\src;..\..\common;$(IntDir)\svn_version;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <DebugInformationFormat>None</DebugInformationFormat>
      <Optimization>Disabled</Optimization>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <LanguageStandard_C>stdc17</LanguageStandard_C>
      <ConformanceMode>true</ConformanceMode>
      <ExternalWarningLevel>Level3</ExternalWarningLevel>
      <UseStandardPreprocessor>true</UseStandardPreprocessor>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <ImportLibrary>..\..\bin\debug\vs2022-win10clang-shared\arm\OpenMPT-NativeSupport.lib</ImportLibrary>
      <LargeAddressAware>true</LargeAddressAware>
    </Link>
    <PreBuildEvent>
      <Command>..\..\build\svn_version\update_svn_version_vs_premake.cmd $(IntDir)</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='DebugShared|ARM64'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <WarningLevel>Level4</WarningLevel>
      <PreprocessorDefinitions>DEBUG;MPT_BUILD_DEBUG;MPT_BUILD_MSVC;WIN32;NOMINMAX;_CRT_NONSTDC_NO_WARNINGS;_CRT_SECURE_NO_WARNINGS;_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES=1;_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES_COUNT=1;_WIN32_WINNT=0x0A00;NTDDI_VERSION=0x0A000009;MPT_WITH_NLOHMANNJSON;MPT_WITH_PORTAUDIO;MPT_WITH_RTAUDIO;MODPLUG_TRACKER;MPT_BUILD_WINESUPPORT;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>..\..\include\nlohmann-json\include;..\..\include\portaudio\include;..\..\include\rtaudio;..\..\src;..\..\common;$(IntDir)\svn_version;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <DebugInformationFormat>None</DebugInformationFormat>
      <Optimization>Disabled</Optimization>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <LanguageStandard_C>stdc17</LanguageStandard_C>
      <ConformanceMode>true</ConformanceMode>
      <ExternalWarningLevel>Level3</ExternalWarningLevel>
      <UseStandardPreprocessor>true</UseStandardPreprocessor>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <ImportLibrary>..\..\bin\debug\vs2022-win10clang-shared\arm64\OpenMPT-NativeSupport.lib</ImportLibrary>
      <LargeAddressAware>true</LargeAddressAware>
    </Link>
    <PreBuildEvent>
      <Command>..\..\build\svn_version\update_svn_version_vs_premake.cmd $(IntDir)</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseShared|Win32'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <WarningLevel>Level4</WarningLevel>
      <PreprocessorDefinitions>NDEBUG;MPT_BUILD_MSVC;WIN32;NOMINMAX;_CRT_NONSTDC_NO_WARNINGS;_CRT_SECURE_NO_WARNINGS;_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES=1;_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES_COUNT=1;_WIN32_WINNT=0x0A00;NTDDI_VERSION=0x0A000009;MPT_WITH_NLOHMANNJSON;MPT_WITH_PORTAUDIO;MPT_WITH_RTAUDIO;MODPLUG_TRACKER;MPT_BUILD_WINESUPPORT;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>..\..\include\nlohmann-json\include;..\..\include\portaudio\include;..\..\include\rtaudio;..\..\src;..\..\common;$(IntDir)\svn_version;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <DebugInformationFormat>None</DebugInformationFormat>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <MinimalRebuild>false</MinimalRebuild>
      <StringPooling>true</StringPooling>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <EnableEnhancedInstructionSet>StreamingSIMDExtensions2</EnableEnhancedInstructionSet>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <LanguageStandard_C>stdc17</LanguageStandard_C>
      <ConformanceMode>true</ConformanceMode>
      <ExternalWarningLevel>Level3</ExternalWarningLevel>
      <UseStandardPreprocessor>true</UseStandardPreprocessor>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <ImportLibrary>..\..\bin\release\vs2022-win10clang-shared\x86\OpenMPT-NativeSupport.lib</ImportLibrary>
      <LargeAddressAware>true</LargeAddressAware>
    </Link>
    <PreBuildEvent>
      <Command>..\..\build\svn_version\update_svn_version_vs_premake.cmd $(IntDir)</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseShared|x64'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <WarningLevel>Level4</WarningLevel>
      <PreprocessorDefinitions>NDEBUG;MPT_BUILD_MSVC;WIN32;NOMINMAX;_CRT_NONSTDC_NO_WARNINGS;_CRT_SECURE_NO_WARNINGS;_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES=1;_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES_COUNT=1;_WIN32_WINNT=0x0A00;NTDDI_VERSION=0x0A000009;MPT_WITH_NLOHMANNJSON;MPT_WITH_PORTAUDIO;MPT_WITH_RTAUDIO;MODPLUG_TRACKER;MPT_BUILD_WINESUPPORT;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>..\..\include\nlohmann-json\include;..\..\include\portaudio\include;..\..\include\rtaudio;..\..\src;..\..\common;$(IntDir)\svn_version;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <DebugInformationFormat>None</DebugInformationFormat>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <MinimalRebuild>false</MinimalRebuild>
      <StringPooling>true</StringPooling>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <LanguageStandard_C>stdc17</LanguageStandard_C>
      <ConformanceMode>true</ConformanceMode>
      <ExternalWarningLevel>Level3</ExternalWarningLevel>
      <UseStandardPreprocessor>true</UseStandardPreprocessor>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <ImportLibrary>..\..\bin\release\vs2022-win10clang-shared\amd64\OpenMPT-NativeSupport.lib</ImportLibrary>
      <LargeAddressAware>true</LargeAddressAware>
    </Link>
    <PreBuildEvent>
      <Command>..\..\build\svn_version\update_svn_version_vs_premake.cmd $(IntDir)</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseShared|ARM'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <WarningLevel>Level4</WarningLevel>
      <PreprocessorDefinitions>NDEBUG;MPT_BUILD_MSVC;WIN32;NOMINMAX;_CRT_NONSTDC_NO_WARNINGS;_CRT_SECURE_NO_WARNINGS;_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES=1;_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES_COUNT=1;_WIN32_WINNT=0x0A00;NTDDI_VERSION=0x0A000009;MPT_WITH_NLOHMANNJSON;MPT_WITH_PORTAUDIO;MPT_WITH_RTAUDIO;MODPLUG_TRACKER;MPT_BUILD_WINESUPPORT;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>..\..\include\nlohmann-json\include;..\..\include\portaudio\include;..\..\include\rtaudio;..\..\src;..\..\common;$(IntDir)\svn_version;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <DebugInformationFormat>None</DebugInformationFormat>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <MinimalRebuild>false</MinimalRebuild>
      <StringPooling>true</StringPooling>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <LanguageStandard_C>stdc17</LanguageStandard_C>
      <ConformanceMode>true</ConformanceMode>
      <ExternalWarningLevel>Level3</ExternalWarningLevel>
      <UseStandardPreprocessor>true</UseStandardPreprocessor>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <ImportLibrary>..\..\bin\release\vs2022-win10clang-shared\arm\OpenMPT-NativeSupport.lib</ImportLibrary>
      <LargeAddressAware>true</LargeAddressAware>
    </Link>
    <PreBuildEvent>
      <Command>..\..\build\svn_version\update_svn_version_vs_premake.cmd $(IntDir)</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseShared|ARM64'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <WarningLevel>Level4</WarningLevel>
      <PreprocessorDefinitions>NDEBUG;MPT_BUILD_MSVC;WIN32;NOMINMAX;_CRT_NONSTDC_NO_WARNINGS;_CRT_SECURE_NO_WARNINGS;_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES=1;_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES_COUNT=1;_WIN32_WINNT=0x0A00;NTDDI_VERSION=0x0A000009;MPT_WITH_NLOHMANNJSON;MPT_WITH_PORTAUDIO;MPT_WITH_RTAUDIO;MODPLUG_TRACKER;MPT_BUILD_WINESUPPORT;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>..\..\include\nlohmann-json\include;..\..\include\portaudio\include;..\..\include\rtaudio;..\..\src;..\..\common;$(IntDir)\svn_version;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <DebugInformationFormat>None</DebugInformationFormat>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <MinimalRebuild>false</MinimalRebuild>
      <StringPooling>true</StringPooling>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <LanguageStandard_C>stdc17</LanguageStandard_C>
      <ConformanceMode>true</ConformanceMode>
      <ExternalWarningLevel>Level3</ExternalWarningLevel>
      <UseStandardPreprocessor>true</UseStandardPreprocessor>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <ImportLibrary>..\..\bin\release\vs2022-win10clang-shared\arm64\OpenMPT-NativeSupport.lib</ImportLibrary>
      <LargeAddressAware>true</LargeAddressAware>
    </Link>
    <PreBuildEvent>
      <Command>..\..\build\svn_version\update_svn_version_vs_premake.cmd $(IntDir)</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='CheckedShared|Win32'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <WarningLevel>Level4</WarningLevel>
      <PreprocessorDefinitions>DEBUG;MPT_BUILD_CHECKED;MPT_BUILD_MSVC;WIN32;NOMINMAX;_CRT_NONSTDC_NO_WARNINGS;_CRT_SECURE_NO_WARNINGS;_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES=1;_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES_COUNT=1;_WIN32_WINNT=0x0A00;NTDDI_VERSION=0x0A000009;MPT_WITH_NLOHMANNJSON;MPT_WITH_PORTAUDIO;MPT_WITH_RTAUDIO;MODPLUG_TRACKER;MPT_BUILD_WINESUPPORT;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>..\..\include\nlohmann-json\include;..\..\include\portaudio\include;..\..\include\rtaudio;..\..\src;..\..\common;$(IntDir)\svn_version;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <DebugInformationFormat>None</DebugInformationFormat>
      <Optimization>Full</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <MinimalRebuild>false</MinimalRebuild>
      <OmitFramePointers>false</OmitFramePointers>
      <StringPooling>true</StringPooling>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <EnableEnhancedInstructionSet>StreamingSIMDExtensions2</EnableEnhancedInstructionSet>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <LanguageStandard_C>stdc17</LanguageStandard_C>
      <ConformanceMode>true</ConformanceMode>
      <ExternalWarningLevel>Level3</ExternalWarningLevel>
      <UseStandardPreprocessor>true</UseStandardPreprocessor>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <ImportLibrary>..\..\bin\checked\vs2022-win10clang-shared\x86\OpenMPT-NativeSupport.lib</ImportLibrary>
      <LargeAddressAware>true</LargeAddressAware>
    </Link>
    <PreBuildEvent>
      <Command>..\..\build\svn_version\update_svn_version_vs_premake.cmd $(IntDir)</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='CheckedShared|x64'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <WarningLevel>Level4</WarningLevel>
      <PreprocessorDefinitions>DEBUG;MPT_BUILD_CHECKED;MPT_BUILD_MSVC;WIN32;NOMINMAX;_CRT_NONSTDC_NO_WARNINGS;_CRT_SECURE_NO_WARNINGS;_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES=1;_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES_COUNT=1;_WIN32_WINNT=0x0A00;NTDDI_VERSION=0x0A000009;MPT_WITH_NLOHMANNJSON;MPT_WITH_PORTAUDIO;MPT_WITH_RTAUDIO;MODPLUG_TRACKER;MPT_BUILD_WINESUPPORT;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>..\..\include\nlohmann-json\include;..\..\include\portaudio\include;..\..\include\rtaudio;..\..\src;..\..\common;$(IntDir)\svn_version;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <DebugInformationFormat>None</DebugInformationFormat>
      <Optimization>Full</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <MinimalRebuild>false</MinimalRebuild>
      <OmitFramePointers>false</OmitFramePointers>
      <StringPooling>true</StringPooling>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <LanguageStandard_C>stdc17</LanguageStandard_C>
      <ConformanceMode>true</ConformanceMode>
      <ExternalWarningLevel>Level3</ExternalWarningLevel>
      <UseStandardPreprocessor>true</UseStandardPreprocessor>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <ImportLibrary>..\..\bin\checked\vs2022-win10clang-shared\amd64\OpenMPT-NativeSupport.lib</ImportLibrary>
      <LargeAddressAware>true</LargeAddressAware>
    </Link>
    <PreBuildEvent>
      <Command>..\..\build\svn_version\update_svn_version_vs_premake.cmd $(IntDir)</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='CheckedShared|ARM'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <WarningLevel>Level4</WarningLevel>
      <PreprocessorDefinitions>DEBUG;MPT_BUILD_CHECKED;MPT_BUILD_MSVC;WIN32;NOMINMAX;_CRT_NONSTDC_NO_WARNINGS;_CRT_SECURE_NO_WARNINGS;_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES=1;_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES_COUNT=1;_WIN32_WINNT=0x0A00;NTDDI_VERSION=0x0A000009;MPT_WITH_NLOHMANNJSON;MPT_WITH_PORTAUDIO;MPT_WITH_RTAUDIO;MODPLUG_TRACKER;MPT_BUILD_WINESUPPORT;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>..\..\include\nlohmann-json\include;..\..\include\portaudio\include;..\..\include\rtaudio;..\..\src;..\..\common;$(IntDir)\svn_version;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <DebugInformationFormat>None</DebugInformationFormat>
      <Optimization>Full</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <MinimalRebuild>false</MinimalRebuild>
      <OmitFramePointers>false</OmitFramePointers>
      <StringPooling>true</StringPooling>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <LanguageStandard_C>stdc17</LanguageStandard_C>
      <ConformanceMode>true</ConformanceMode>
      <ExternalWarningLevel>Level3</ExternalWarningLevel>
      <UseStandardPreprocessor>true</UseStandardPreprocessor>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <ImportLibrary>..\..\bin\checked\vs2022-win10clang-shared\arm\OpenMPT-NativeSupport.lib</ImportLibrary>
      <LargeAddressAware>true</LargeAddressAware>
    </Link>
    <PreBuildEvent>
      <Command>..\..\build\svn_version\update_svn_version_vs_premake.cmd $(IntDir)</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='CheckedShared|ARM64'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <WarningLevel>Level4</WarningLevel>
      <PreprocessorDefinitions>DEBUG;MPT_BUILD_CHECKED;MPT_BUILD_MSVC;WIN32;NOMINMAX;_CRT_NONSTDC_NO_WARNINGS;_CRT_SECURE_NO_WARNINGS;_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES=1;_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES_COUNT=1;_WIN32_WINNT=0x0A00;NTDDI_VERSION=0x0A000009;MPT_WITH_NLOHMANNJSON;MPT_WITH_PORTAUDIO;MPT_WITH_RTAUDIO;MODPLUG_TRACKER;MPT_BUILD_WINESUPPORT;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>..\..\include\nlohmann-json\include;..\..\include\portaudio\include;..\..\include\rtaudio;..\..\src;..\..\common;$(IntDir)\svn_version;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <DebugInformationFormat>None</DebugInformationFormat>
      <Optimization>Full</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <MinimalRebuild>false</MinimalRebuild>
      <OmitFramePointers>false</OmitFramePointers>
      <StringPooling>true</StringPooling>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <LanguageStandard_C>stdc17</LanguageStandard_C>
      <ConformanceMode>true</ConformanceMode>
      <ExternalWarningLevel>Level3</ExternalWarningLevel>
      <UseStandardPreprocessor>true</UseStandardPreprocessor>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <ImportLibrary>..\..\bin\checked\vs2022-win10clang-shared\arm64\OpenMPT-NativeSupport.lib</ImportLibrary>
      <LargeAddressAware>true</LargeAddressAware>
    </Link>
    <PreBuildEvent>
      <Command>..\..\build\svn_version\update_svn_version_vs_premake.cmd $(IntDir)</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClInclude Include="..\..\common\BuildSettings.h" />
    <ClInclude Include="..\..\common\ComponentManager.h" />
    <ClInclude Include="..\..\common\Dither.h" />
    <ClInclude Include="..\..\common\FileReader.h" />
    <ClInclude Include="..\..\common\FileReaderFwd.h" />
    <ClInclude Include="..\..\common\Logging.h" />
    <ClInclude Include="..\..\common\Profiler.h" />
    <ClInclude Include="..\..\common\misc_util.h" />
    <ClInclude Include="..\..\common\mptAssert.h" />
    <ClInclude Include="..\..\common\mptBaseMacros.h" />
    <ClInclude Include="..\..\common\mptBaseTypes.h" />
    <ClInclude Include="..\..\common\mptBaseUtils.h" />
    <ClInclude Include="..\..\common\mptCPU.h" />
    <ClInclude Include="..\..\common\mptFileIO.h" />
    <ClInclude Include="..\..\common\mptFileTemporary.h" />
    <ClInclude Include="..\..\common\mptFileType.h" />
    <ClInclude Include="..\..\common\mptPathString.h" />
    <ClInclude Include="..\..\common\mptRandom.h" />
    <ClInclude Include="..\..\common\mptString.h" />
    <ClInclude Include="..\..\common\mptStringBuffer.h" />
    <ClInclude Include="..\..\common\mptStringFormat.h" />
    <ClInclude Include="..\..\common\mptStringParse.h" />
    <ClInclude Include="..\..\common\mptTime.h" />
    <ClInclude Include="..\..\common\serialization_utils.h" />
    <ClInclude Include="..\..\common\stdafx.h" />
    <ClInclude Include="..\..\common\version.h" />
    <ClInclude Include="..\..\common\versionNumber.h" />
    <ClInclude Include="..\..\misc\WriteMemoryDump.h" />
    <ClInclude Include="..\..\misc\mptColor.h" />
    <ClInclude Include="..\..\misc\mptLibrary.h" />
    <ClInclude Include="..\..\misc\mptMutex.h" />
    <ClInclude Include="..\..\misc\mptOS.h" />
    <ClInclude Include="..\..\misc\mptOSException.h" />
    <ClInclude Include="..\..\misc\mptWine.h" />
    <ClInclude Include="..\..\mptrack\wine\Native.h" />
    <ClInclude Include="..\..\mptrack\wine\NativeConfig.h" />
    <ClInclude Include="..\..\mptrack\wine\NativeSoundDevice.h" />
    <ClInclude Include="..\..\mptrack\wine\NativeSoundDeviceMarshalling.h" />
    <ClInclude Include="..\..\mptrack\wine\NativeUtils.h" />
    <ClInclude Include="..\..\src\mpt\arch\arch.hpp" />
    <ClInclude Include="..\..\src\mpt\arch\feature_flags.hpp" />
    <ClInclude Include="..\..\src\mpt\arch\x86_amd64.hpp" />
    <ClInclude Include="..\..\src\mpt\audio\sample.hpp" />
    <ClInclude Include="..\..\src\mpt\audio\span.hpp" />
    <ClInclude Include="..\..\src\mpt\base\algorithm.hpp" />
    <ClInclude Include="..\..\src\mpt\base\aligned_array.hpp" />
    <ClInclude Include="..\..\src\mpt\base\alloc.hpp" />
    <ClInclude Include="..\..\src\mpt\base\arithmetic_shift.hpp" />
    <ClInclude Include="..\..\src\mpt\base\array.hpp" />
    <ClInclude Include="..\..\src\mpt\base\bit.hpp" />
    <ClInclude Include="..\..\src\mpt\base\check_platform.hpp" />
    <ClInclude Include="..\..\src\mpt\base\compiletime_warning.hpp" />
    <ClInclude Include="..\..\src\mpt\base\constexpr_throw.hpp" />
    <ClInclude Include="..\..\src\mpt\base\detect.hpp" />
    <ClInclude Include="..\..\src\mpt\base\detect_arch.hpp" />
    <ClInclude Include="..\..\src\mpt\base\detect_compiler.hpp" />
    <ClInclude Include="..\..\src\mpt\base\detect_libc.hpp" />
    <ClInclude Include="..\..\src\mpt\base\detect_libcxx.hpp" />
    <ClInclude Include="..\..\src\mpt\base\detect_os.hpp" />
    <ClInclude Include="..\..\src\mpt\base\detect_quirks.hpp" />
    <ClInclude Include="..\..\src\mpt\base\floatingpoint.hpp" />
    <ClInclude Include="..\..\src\mpt\base\integer.hpp" />
    <ClInclude Include="..\..\src\mpt\base\macros.hpp" />
    <ClInclude Include="..\..\src\mpt\base\math.hpp" />
    <ClInclude Include="..\..\src\mpt\base\memory.hpp" />
    <ClInclude Include="..\..\src\mpt\base\namespace.hpp" />
    <ClInclude Include="..\..\src\mpt\base\numbers.hpp" />
    <ClInclude Include="..\..\src\mpt\base\numeric.hpp" />
    <ClInclude Include="..\..\src\mpt\base\pointer.hpp" />
    <ClInclude Include="..\..\src\mpt\base\preprocessor.hpp" />
    <ClInclude Include="..\..\src\mpt\base\saturate_cast.hpp" />
    <ClInclude Include="..\..\src\mpt\base\saturate_round.hpp" />
    <ClInclude Include="..\..\src\mpt\base\secure.hpp" />
    <ClInclude Include="..\..\src\mpt\base\semantic_version.hpp" />
    <ClInclude Include="..\..\src\mpt\base\source_location.hpp" />
    <ClInclude Include="..\..\src\mpt\base\span.hpp" />
    <ClInclude Include="..\..\src\mpt\base\tests\tests_base_arithmetic_shift.hpp" />
    <ClInclude Include="..\..\src\mpt\base\tests\tests_base_bit.hpp" />
    <ClInclude Include="..\..\src\mpt\base\tests\tests_base_math.hpp" />
    <ClInclude Include="..\..\src\mpt\base\tests\tests_base_saturate_cast.hpp" />
    <ClInclude Include="..\..\src\mpt\base\tests\tests_base_saturate_round.hpp" />
    <ClInclude Include="..\..\src\mpt\base\tests\tests_base_wrapping_divide.hpp" />
    <ClInclude Include="..\..\src\mpt\base\utility.hpp" />
    <ClInclude Include="..\..\src\mpt\base\version.hpp" />
    <ClInclude Include="..\..\src\mpt\base\wrapping_divide.hpp" />
    <ClInclude Include="..\..\src\mpt\binary\base64.hpp" />
    <ClInclude Include="..\..\src\mpt\binary\base64url.hpp" />
    <ClInclude Include="..\..\src\mpt\binary\hex.hpp" />
    <ClInclude Include="..\..\src\mpt\binary\tests\tests_binary.hpp" />
    <ClInclude Include="..\..\src\mpt\check\compiler.hpp" />
    <ClInclude Include="..\..\src\mpt\check\libc.hpp" />
    <ClInclude Include="..\..\src\mpt\check\mfc.hpp" />
    <ClInclude Include="..\..\src\mpt\check\windows.hpp" />
    <ClInclude Include="..\..\src\mpt\crc\crc.hpp" />
    <ClInclude Include="..\..\src\mpt\crc\tests\tests_crc.hpp" />
    <ClInclude Include="..\..\src\mpt\crypto\exception.hpp" />
    <ClInclude Include="..\..\src\mpt\crypto\hash.hpp" />
    <ClInclude Include="..\..\src\mpt\crypto\jwk.hpp" />
    <ClInclude Include="..\..\src\mpt\crypto\tests\tests_crypto.hpp" />
    <ClInclude Include="..\..\src\mpt\detect\dl.hpp" />
    <ClInclude Include="..\..\src\mpt\detect\ltdl.hpp" />
    <ClInclude Include="..\..\src\mpt\detect\mfc.hpp" />
    <ClInclude Include="..\..\src\mpt\detect\nlohmann_json.hpp" />
    <ClInclude Include="..\..\src\mpt\endian\floatingpoint.hpp" />
    <ClInclude Include="..\..\src\mpt\endian\int24.hpp" />
    <ClInclude Include="..\..\src\mpt\endian\integer.hpp" />
    <ClInclude Include="..\..\src\mpt\endian\tests\tests_endian_floatingpoint.hpp" />
    <ClInclude Include="..\..\src\mpt\endian\tests\tests_endian_int24.hpp" />
    <ClInclude Include="..\..\src\mpt\endian\tests\tests_endian_integer.hpp" />
    <ClInclude Include="..\..\src\mpt\endian\type_traits.hpp" />
    <ClInclude Include="..\..\src\mpt\environment\environment.hpp" />
    <ClInclude Include="..\..\src\mpt\exception_text\exception_text.hpp" />
    <ClInclude Include="..\..\src\mpt\format\default_floatingpoint.hpp" />
    <ClInclude Include="..\..\src\mpt\format\default_formatter.hpp" />
    <ClInclude Include="..\..\src\mpt\format\default_integer.hpp" />
    <ClInclude Include="..\..\src\mpt\format\default_string.hpp" />
    <ClInclude Include="..\..\src\mpt\format\helpers.hpp" />
    <ClInclude Include="..\..\src\mpt\format\join.hpp" />
    <ClInclude Include="..\..\src\mpt\format\message.hpp" />
    <ClInclude Include="..\..\src\mpt\format\message_macros.hpp" />
    <ClInclude Include="..\..\src\mpt\format\simple.hpp" />
    <ClInclude Include="..\..\src\mpt\format\simple_floatingpoint.hpp" />
    <ClInclude Include="..\..\src\mpt\format\simple_integer.hpp" />
    <ClInclude Include="..\..\src\mpt\format\simple_spec.hpp" />
    <ClInclude Include="..\..\src\mpt\format\tests\tests_format_message.hpp" />
    <ClInclude Include="..\..\src\mpt\format\tests\tests_format_simple.hpp" />
    <ClInclude Include="..\..\src\mpt\fs\common_directories.hpp" />
    <ClInclude Include="..\..\src\mpt\fs\fs.hpp" />
    <ClInclude Include="..\..\src\mpt\io\base.hpp" />
    <ClInclude Include="..\..\src\mpt\io\io.hpp" />
    <ClInclude Include="..\..\src\mpt\io\io_span.hpp" />
    <ClInclude Include="..\..\src\mpt\io\io_stdstream.hpp" />
    <ClInclude Include="..\..\src\mpt\io\io_virtual_wrapper.hpp" />
    <ClInclude Include="..\..\src\mpt\io\tests\tests_io.hpp" />
    <ClInclude Include="..\..\src\mpt\io_file\fileadapter.hpp" />
    <ClInclude Include="..\..\src\mpt\io_file\fileref.hpp" />
    <ClInclude Include="..\..\src\mpt\io_file\fstream.hpp" />
    <ClInclude Include="..\..\src\mpt\io_file\inputfile.hpp" />
    <ClInclude Include="..\..\src\mpt\io_file\inputfile_filecursor.hpp" />
    <ClInclude Include="..\..\src\mpt\io_file\outputfile.hpp" />
    <ClInclude Include="..\..\src\mpt\io_file\unique_basename.hpp" />
    <ClInclude Include="..\..\src\mpt\io_file\unique_tempfilename.hpp" />
    <ClInclude Include="..\..\src\mpt\io_read\callbackstream.hpp" />
    <ClInclude Include="..\..\src\mpt\io_read\filecursor.hpp" />
    <ClInclude Include="..\..\src\mpt\io_read\filecursor_callbackstream.hpp" />
    <ClInclude Include="..\..\src\mpt\io_read\filecursor_filename_traits.hpp" />
    <ClInclude Include="..\..\src\mpt\io_read\filecursor_memory.hpp" />
    <ClInclude Include="..\..\src\mpt\io_read\filecursor_stdstream.hpp" />
    <ClInclude Include="..\..\src\mpt\io_read\filecursor_traits_filedata.hpp" />
    <ClInclude Include="..\..\src\mpt\io_read\filecursor_traits_memory.hpp" />
    <ClInclude Include="..\..\src\mpt\io_read\filedata.hpp" />
    <ClInclude Include="..\..\src\mpt\io_read\filedata_base.hpp" />
    <ClInclude Include="..\..\src\mpt\io_read\filedata_base_buffered.hpp" />
    <ClInclude Include="..\..\src\mpt\io_read\filedata_base_seekable.hpp" />
    <ClInclude Include="..\..\src\mpt\io_read\filedata_base_unseekable.hpp" />
    <ClInclude Include="..\..\src\mpt\io_read\filedata_callbackstream.hpp" />
    <ClInclude Include="..\..\src\mpt\io_read\filedata_memory.hpp" />
    <ClInclude Include="..\..\src\mpt\io_read\filedata_stdstream.hpp" />
    <ClInclude Include="..\..\src\mpt\io_read\filereader.hpp" />
    <ClInclude Include="..\..\src\mpt\io_write\buffer.hpp" />
    <ClInclude Include="..\..\src\mpt\json\json.hpp" />
    <ClInclude Include="..\..\src\mpt\library\library.hpp" />
    <ClInclude Include="..\..\src\mpt\mutex\mutex.hpp" />
    <ClInclude Include="..\..\src\mpt\osinfo\class.hpp" />
    <ClInclude Include="..\..\src\mpt\osinfo\dos_memory.hpp" />
    <ClInclude Include="..\..\src\mpt\osinfo\dos_version.hpp" />
    <ClInclude Include="..\..\src\mpt\osinfo\windows_version.hpp" />
    <ClInclude Include="..\..\src\mpt\osinfo\windows_wine_version.hpp" />
    <ClInclude Include="..\..\src\mpt\out_of_memory\out_of_memory.hpp" />
    <ClInclude Include="..\..\src\mpt\parse\parse.hpp" />
    <ClInclude Include="..\..\src\mpt\parse\split.hpp" />
    <ClInclude Include="..\..\src\mpt\parse\tests\tests_parse.hpp" />
    <ClInclude Include="..\..\src\mpt\path\basic_path.hpp" />
    <ClInclude Include="..\..\src\mpt\path\native_path.hpp" />
    <ClInclude Include="..\..\src\mpt\path\os_path.hpp" />
    <ClInclude Include="..\..\src\mpt\path\os_path_long.hpp" />
    <ClInclude Include="..\..\src\mpt\path\path.hpp" />
    <ClInclude Include="..\..\src\mpt\random\crand.hpp" />
    <ClInclude Include="..\..\src\mpt\random\default_engines.hpp" />
    <ClInclude Include="..\..\src\mpt\random\device.hpp" />
    <ClInclude Include="..\..\src\mpt\random\engine.hpp" />
    <ClInclude Include="..\..\src\mpt\random\engine_lcg.hpp" />
    <ClInclude Include="..\..\src\mpt\random\random.hpp" />
    <ClInclude Include="..\..\src\mpt\random\seed.hpp" />
    <ClInclude Include="..\..\src\mpt\random\tests\tests_random.hpp" />
    <ClInclude Include="..\..\src\mpt\string\buffer.hpp" />
    <ClInclude Include="..\..\src\mpt\string\tests\tests_string_buffer.hpp" />
    <ClInclude Include="..\..\src\mpt\string\tests\tests_string_utility.hpp" />
    <ClInclude Include="..\..\src\mpt\string\types.hpp" />
    <ClInclude Include="..\..\src\mpt\string\utility.hpp" />
    <ClInclude Include="..\..\src\mpt\string_transcode\macros.hpp" />
    <ClInclude Include="..\..\src\mpt\string_transcode\tests\tests_string_transcode.hpp" />
    <ClInclude Include="..\..\src\mpt\string_transcode\transcode.hpp" />
    <ClInclude Include="..\..\src\mpt\system_error\system_error.hpp" />
    <ClInclude Include="..\..\src\mpt\test\test.hpp" />
    <ClInclude Include="..\..\src\mpt\test\test_macros.hpp" />
    <ClInclude Include="..\..\src\mpt\uuid\guid.hpp" />
    <ClInclude Include="..\..\src\mpt\uuid\tests\tests_uuid.hpp" />
    <ClInclude Include="..\..\src\mpt\uuid\uuid.hpp" />
    <ClInclude Include="..\..\src\mpt\uuid_namespace\tests\tests_uuid_namespace.hpp" />
    <ClInclude Include="..\..\src\mpt\uuid_namespace\uuid_namespace.hpp" />
    <ClInclude Include="..\..\src\openmpt\all\BuildSettings.hpp" />
    <ClInclude Include="..\..\src\openmpt\base\Endian.hpp" />
    <ClInclude Include="..\..\src\openmpt\base\FlagSet.hpp" />
    <ClInclude Include="..\..\src\openmpt\base\Int24.hpp" />
    <ClInclude Include="..\..\src\openmpt\base\Types.hpp" />
    <ClInclude Include="..\..\src\openmpt\logging\Logger.hpp" />
    <ClInclude Include="..\..\src\openmpt\random\ModPlug.hpp" />
    <ClInclude Include="..\..\src\openmpt\soundbase\Copy.hpp" />
    <ClInclude Include="..\..\src\openmpt\soundbase\CopyMix.hpp" />
    <ClInclude Include="..\..\src\openmpt\soundbase\Dither.hpp" />
    <ClInclude Include="..\..\src\openmpt\soundbase\DitherModPlug.hpp" />
    <ClInclude Include="..\..\src\openmpt\soundbase\DitherNone.hpp" />
    <ClInclude Include="..\..\src\openmpt\soundbase\DitherSimple.hpp" />
    <ClInclude Include="..\..\src\openmpt\soundbase\MixSample.hpp" />
    <ClInclude Include="..\..\src\openmpt\soundbase\MixSampleConvert.hpp" />
    <ClInclude Include="..\..\src\openmpt\soundbase\SampleClip.hpp" />
    <ClInclude Include="..\..\src\openmpt\soundbase\SampleClipFixedPoint.hpp" />
    <ClInclude Include="..\..\src\openmpt\soundbase\SampleConvert.hpp" />
    <ClInclude Include="..\..\src\openmpt\soundbase\SampleConvertFixedPoint.hpp" />
    <ClInclude Include="..\..\src\openmpt\soundbase\SampleDecode.hpp" />
    <ClInclude Include="..\..\src\openmpt\soundbase\SampleEncode.hpp" />
    <ClInclude Include="..\..\src\openmpt\soundbase\SampleFormat.hpp" />
    <ClInclude Include="..\..\src\openmpt\sounddevice\SoundDevice.hpp" />
    <ClInclude Include="..\..\src\openmpt\sounddevice\SoundDeviceASIO.hpp" />
    <ClInclude Include="..\..\src\openmpt\sounddevice\SoundDeviceBase.hpp" />
    <ClInclude Include="..\..\src\openmpt\sounddevice\SoundDeviceBuffer.hpp" />
    <ClInclude Include="..\..\src\openmpt\sounddevice\SoundDeviceCallback.hpp" />
    <ClInclude Include="..\..\src\openmpt\sounddevice\SoundDeviceDirectSound.hpp" />
    <ClInclude Include="..\..\src\openmpt\sounddevice\SoundDeviceManager.hpp" />
    <ClInclude Include="..\..\src\openmpt\sounddevice\SoundDevicePortAudio.hpp" />
    <ClInclude Include="..\..\src\openmpt\sounddevice\SoundDevicePulseSimple.hpp" />
    <ClInclude Include="..\..\src\openmpt\sounddevice\SoundDevicePulseaudio.hpp" />
    <ClInclude Include="..\..\src\openmpt\sounddevice\SoundDeviceRtAudio.hpp" />
    <ClInclude Include="..\..\src\openmpt\sounddevice\SoundDeviceUtilities.hpp" />
    <ClInclude Include="..\..\src\openmpt\sounddevice\SoundDeviceWaveout.hpp" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="..\..\common\ComponentManager.cpp" />
    <ClCompile Include="..\..\common\Logging.cpp" />
    <ClCompile Include="..\..\common\Profiler.cpp" />
    <ClCompile Include="..\..\common\mptFileIO.cpp" />
    <ClCompile Include="..\..\common\mptFileTemporary.cpp" />
    <ClCompile Include="..\..\common\mptFileType.cpp" />
    <ClCompile Include="..\..\common\mptPathString.cpp" />
    <ClCompile Include="..\..\common\mptRandom.cpp" />
    <ClCompile Include="..\..\common\mptString.cpp" />
    <ClCompile Include="..\..\common\mptStringBuffer.cpp" />
    <ClCompile Include="..\..\common\mptStringFormat.cpp" />
    <ClCompile Include="..\..\common\mptStringParse.cpp" />
    <ClCompile Include="..\..\common\mptTime.cpp" />
    <ClCompile Include="..\..\common\serialization_utils.cpp" />
    <ClCompile Include="..\..\common\version.cpp" />
    <ClCompile Include="..\..\misc\mptColor.cpp" />
    <ClCompile Include="..\..\misc\mptLibrary.cpp" />
    <ClCompile Include="..\..\misc\mptOS.cpp" />
    <ClCompile Include="..\..\misc\mptWine.cpp" />
    <ClCompile Include="..\..\mptrack\wine\Native.cpp" />
    <ClCompile Include="..\..\mptrack\wine\NativeSoundDevice.cpp" />
    <ClCompile Include="..\..\mptrack\wine\NativeUtils.cpp" />
    <ClCompile Include="..\..\src\openmpt\sounddevice\SoundDevice.cpp" />
    <ClCompile Include="..\..\src\openmpt\sounddevice\SoundDeviceASIO.cpp" />
    <ClCompile Include="..\..\src\openmpt\sounddevice\SoundDeviceBase.cpp" />
    <ClCompile Include="..\..\src\openmpt\sounddevice\SoundDeviceDirectSound.cpp" />
    <ClCompile Include="..\..\src\openmpt\sounddevice\SoundDeviceManager.cpp" />
    <ClCompile Include="..\..\src\openmpt\sounddevice\SoundDevicePortAudio.cpp" />
    <ClCompile Include="..\..\src\openmpt\sounddevice\SoundDevicePulseSimple.cpp" />
    <ClCompile Include="..\..\src\openmpt\sounddevice\SoundDevicePulseaudio.cpp" />
    <ClCompile Include="..\..\src\openmpt\sounddevice\SoundDeviceRtAudio.cpp" />
    <ClCompile Include="..\..\src\openmpt\sounddevice\SoundDeviceUtilities.cpp" />
    <ClCompile Include="..\..\src\openmpt\sounddevice\SoundDeviceWaveout.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="ext\portaudio.vcxproj">
      <Project>{189B867F-FF4B-45A1-B741-A97492EE69AF}</Project>
    </ProjectReference>
    <ProjectReference Include="ext\rtaudio.vcxproj">
      <Project>{4886456B-1342-4EC8-AD3F-D92AEB8C1097}</Project>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>